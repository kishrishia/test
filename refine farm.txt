local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local VirtualInputManager = game:GetService("VirtualInputManager")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HRP = Character:WaitForChild("HumanoidRootPart")
local Handler = Character:WaitForChild("PlayerHandler"):WaitForChild("HandlerEvent")
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- === CONFIG ===
local questName = "Find Diamond?"
local questPath = function()
	return PlayerGui.Main.QuestAlertFrame.QuestGUI:FindFirstChild(questName)
end

local targetQueue = {
	{ui = "Miner Goon Lv.50", npc = "Miner Goon Lv.50"},
}

-- === UTILITIES ===
local function fireDialogue(choice)
	local args = {{ Choice = choice }}
	ReplicatedStorage.Remote.Event.Dialogue:FireServer(unpack(args))
end

local function m1Attack(pos)
	local args = {{
		CombatAction = true,
		LightAttack = true,
		MouseData = CFrame.new(pos)
	}}
	Handler:FireServer(unpack(args))
end

local function useSkill(pos)
	local args = {{
		Skill = true,
		AttackType = "Down",
		Key = "E",
		MouseData = CFrame.new(pos)
	}}
	Handler:FireServer(unpack(args))
end

local function clickQuestButton()
	local btn = PlayerGui:WaitForChild("Main"):WaitForChild("FunctionFrame"):WaitForChild("QuestButton")
	if btn and btn.AbsolutePosition then
		local pos = btn.AbsolutePosition + (btn.AbsoluteSize / 2)
		VirtualInputManager:SendMouseButtonEvent(pos.X, pos.Y, 0, true, game, 0)
		task.wait()
		VirtualInputManager:SendMouseButtonEvent(pos.X, pos.Y, 0, false, game, 0)
	end
end

local function tpTo(position, lookAt)
	Character:MoveTo(position)
	if lookAt then
		local direction = (lookAt - position).Unit
		HRP.CFrame = CFrame.new(position, position + direction)
	end
	print("[TP DEBUG] Teleported to:", position, "Looking at:", lookAt)
end

-- === PRESS KEY FUNCTION ===
local function pressKey(key)
	VirtualInputManager:SendKeyEvent(true, key, false, game)
	VirtualInputManager:SendKeyEvent(false, key, false, game)
end

-- === CRAFTING AND SELLING LOGIC ===
local function checkAndCraft()
	pressKey(Enum.KeyCode.BackSlash)
	task.wait(0.2)

	for _ = 1, 4 do
		pressKey(Enum.KeyCode.Down)
		task.wait(0.1)
	end

	pressKey(Enum.KeyCode.Return)

	task.wait(1.2)

	local inv = PlayerGui.Main.BackpackMainFrame.Inventory.ItemScroll
	local ember = inv:FindFirstChild("Chunk of Ore")
	local ancientStone = inv:FindFirstChild("Ancient Stone")

	local rawTextEmber = ember and ember:FindFirstChild("Qty") and ember.Qty.Text or ""
	local qtyEmber = tonumber(string.match(rawTextEmber, ">(%d+)<"))

	local rawTextStone = ancientStone and ancientStone:FindFirstChild("Qty") and ancientStone.Qty.Text or ""
	local qtyStone = tonumber(string.match(rawTextStone, ">(%d+)<"))

	print("[CRAFT DEBUG] Parsed Qty Ember:", qtyEmber)
	print("[SELL DEBUG] Parsed Qty Ancient Stone:", qtyStone)

	task.wait(0.5)
	pressKey(Enum.KeyCode.Return)
	task.wait(0.5)
	pressKey(Enum.KeyCode.BackSlash)
	task.wait(0.2)

	if qtyEmber and qtyEmber > 60 then
		tpTo(Vector3.new(-860, 26, -25), nil)
		task.wait(3)
		fireclickdetector(Workspace.NPC.UniversalCrafting.ClickDetector)
		task.wait(1)
		fireDialogue("[ Craft ]")
		task.wait(1)

		for i = 1, 10 do
			local args = {"Special", "Blue Fragment"}
			ReplicatedStorage.Remote.Event.CraftingRemote:FireServer(unpack(args))
			task.wait(0.25)
			local args = {"Special", "Blue Sappyre"}
			ReplicatedStorage.Remote.Event.CraftingRemote:FireServer(unpack(args))
			task.wait(0.25)
			local args = {"Special", "Red Fragment"}
			ReplicatedStorage.Remote.Event.CraftingRemote:FireServer(unpack(args))
			task.wait(0.25)
			local args = {"Special", "Red Emperor"}
			ReplicatedStorage.Remote.Event.CraftingRemote:FireServer(unpack(args))
		end

		pressKey(Enum.KeyCode.BackSlash)
		task.wait(0.2)
		pressKey(Enum.KeyCode.Down) 
		task.wait(0.2)
		pressKey(Enum.KeyCode.Return)
		task.wait(0.3)
		pressKey(Enum.KeyCode.BackSlash)
	end

	if qtyStone and qtyStone > 60 then
		tpTo(Vector3.new(-1237, 2, -1500), nil) -- Assuming JunkBuyer is near LeeTheMiner, adjust if needed
		task.wait(1)
		fireclickdetector(Workspace.NPC.JunkBuyer.ClickDetector)
		task.wait(1)
		fireDialogue("[ Press Button ]")
		task.wait(2)
		local args = {{["Ancient Stone"] = 500}}
		ReplicatedStorage.Remote.Function.SellingRemoteFunction:InvokeServer(unpack(args))
	end
end

-- === QUEST LOGIC ===
local function startQuest()
	tpTo(Vector3.new(-1237, 2, -1500), nil)
	task.wait(1)
	fireclickdetector(Workspace.NPC.LeeTheMiner.ClickDetector)
	task.wait(1)
	fireDialogue("[ Accept Quest ]")
	task.wait(0.5)
	fireDialogue("Exit = true")
end

local function completeQuest()
	tpTo(Vector3.new(-1237, 2, -1500), nil)
	task.wait(1)
	fireclickdetector(Workspace.NPC.LeeTheMiner.ClickDetector)
	task.wait(1)
	fireDialogue("Yes, I've done it.")
	task.wait(0.5)
	fireDialogue("Exit = true")
end

local function waitForQuestText()
	clickQuestButton()
	repeat task.wait(0.5)
	until questPath() and (questPath().Text:match("%(.-/.-%)") or questPath().Text:find("Quest Completed"))
end

local function isQuestComplete()
	local q = questPath()
	if q and q.Text then
		clickQuestButton()
		task.wait(0.3)
		return q.Text:find("Quest Completed")
	end
	return false
end

local function killTarget(npcName)
	if isQuestComplete() then
		return true
	end

	local npcs = {}
	for _, npc in ipairs(Workspace.Lives:GetChildren()) do
		if npc.Name == npcName and npc:FindFirstChild("HumanoidRootPart") and npc:FindFirstChild("Humanoid") and npc.Humanoid.Health > 0 then
			table.insert(npcs, npc)
		end
	end

	for _, npc in ipairs(npcs) do
		if isQuestComplete() then
			return true
		end
		local targetHRP = npc:FindFirstChild("HumanoidRootPart")
		if targetHRP then
			repeat
				local npcPos = targetHRP.Position
				local npcCFrame = targetHRP.CFrame
				local behindPos = npcPos - (npcCFrame.LookVector * 3.5) + Vector3.new(0, 0, 0) -- 2 studs behind, 1 stud up
				tpTo(behindPos, npcPos) -- Force teleport every cycle
				m1Attack(npcPos)
				m1Attack(npcPos)
				useSkill(npcPos)
				task.wait(0.1) -- Faster loop for parasite-like sticking
			until not npc:FindFirstChild("Humanoid") or npc.Humanoid.Health <= 0 or not Workspace.Lives:FindFirstChild(npc.Name) or isQuestComplete()
			task.wait(0.3)
			if isQuestComplete() then
				return true
			end
		end
	end
	return false
end

-- === MAIN LOOP ===
while true do
	checkAndCraft()

	startQuest()
	waitForQuestText()

	while not isQuestComplete() do
		for _, target in ipairs(targetQueue) do
			if killTarget(target.npc) then
				break
			end
			task.wait(0.3)
			clickQuestButton()
		end
	end

	completeQuest()
end
