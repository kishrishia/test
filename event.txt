local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local VirtualInputManager = game:GetService("VirtualInputManager")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HRP = Character:WaitForChild("HumanoidRootPart")
local Handler = Character:WaitForChild("PlayerHandler"):WaitForChild("HandlerEvent")
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- === CONFIG ===
local questName = "Summer's Eclipse"
local questPath = function()
	return PlayerGui.Main.QuestAlertFrame.QuestGUI:FindFirstChild(questName)
end

local targetQueue = {
	{ui = "Water Specialist Lv.80", npc = "Water Specialist Lv.80"},
	{ui = "Festive Soldier Lv.80", npc = "Festive Soldier Lv.80"},
	{ui = "Festive Elite Lv.90", npc = "Festive Elite Lv.90"},
}

-- === UTILITIES ===
local function fireDialogue(choice)
	local args = {{ Choice = choice }}
	ReplicatedStorage.Remote.Event.Dialogue:FireServer(unpack(args))
end

local function m1Attack(pos)
	local args = {{
		CombatAction = true,
		LightAttack = true,
		MouseData = CFrame.new(pos)
	}}
	Handler:FireServer(unpack(args))
end

local function useSkill(pos)
	local args = {{
		Skill = true,
		AttackType = "Down",
		Key = "E",
		MouseData = CFrame.new(pos)
	}}
	Handler:FireServer(unpack(args))
end

local function clickQuestButton()
	local btn = PlayerGui:WaitForChild("Main"):WaitForChild("FunctionFrame"):WaitForChild("QuestButton")
	if btn and btn.AbsolutePosition then
		local pos = btn.AbsolutePosition + (btn.AbsoluteSize / 2)
		VirtualInputManager:SendMouseButtonEvent(pos.X, pos.Y, 0, true, game, 0)
		task.wait()
		VirtualInputManager:SendMouseButtonEvent(pos.X, pos.Y, 0, false, game, 0)
	end
end

local function tpTo(position)
	LocalPlayer.Character:MoveTo(position)
end

-- === PRESS KEY FUNCTION ===
local function pressKey(key)
	VirtualInputManager:SendKeyEvent(true, key, false, game)
	VirtualInputManager:SendKeyEvent(false, key, false, game)
end

-- === CRAFTING LOGIC ===
local function checkAndCraft()
	-- Step 1: open inventory UI via key navigation
	pressKey(Enum.KeyCode.BackSlash)
	task.wait(0.2)

	for _ = 1, 4 do
		pressKey(Enum.KeyCode.Down)
		task.wait(0.1)
	end

	pressKey(Enum.KeyCode.Return)
	task.wait(0.5)

	-- Step 2: close inventory again
	pressKey(Enum.KeyCode.BackSlash)
	task.wait(0.2)

	-- Step 3: check item quantity
	local inv = PlayerGui.Main.BackpackMainFrame.Inventory.ItemScroll
	local ember = inv:FindFirstChild("Shattered Ember Stone")
	if ember and tonumber(ember.Qty.Text) > 24 then
		-- Go to crafting NPC
		tpTo(Vector3.new(-860, 26, -25))
		task.wait(3)
		fireclickdetector(Workspace.NPC.UniversalCrafting.ClickDetector)
		task.wait(1)
		fireDialogue("[ Craft ]")
		task.wait(1)

		-- Craft 5 times
		for i = 1, 5 do
			local args = {
				"Event",
				"Summer's Amber"
			}
			ReplicatedStorage.Remote.Event.CraftingRemote:FireServer(unpack(args))
			task.wait(0.25)
		end

		-- Step 4: navigate and close UI
		pressKey(Enum.KeyCode.BackSlash)
		task.wait(0.2)
		for _ = 1, 2 do pressKey(Enum.KeyCode.Down) task.wait(0.1) end
		for _ = 1, 5 do pressKey(Enum.KeyCode.Left) task.wait(0.1) end
		pressKey(Enum.KeyCode.Return)
		task.wait(0.3)
		pressKey(Enum.KeyCode.BackSlash)
	end
end

-- === QUEST LOGIC ===
local function startQuest()
	tpTo(Vector3.new(-969, 26, -56))
	task.wait(3)
	fireclickdetector(Workspace.NPC.Sommic.ClickDetector)
	task.wait(1)
	fireDialogue("[ Event Quest ]")
	task.wait(0.5)
	fireDialogue("Exit = true")
end

local function completeQuest()
	tpTo(Vector3.new(-969, 26, -56))
	task.wait(3)
	fireclickdetector(Workspace.NPC.Sommic.ClickDetector)
	task.wait(1)
	fireDialogue("[ Event Quest ]")
	task.wait(0.5)
	fireDialogue("Yep!")
	task.wait(0.5)
	fireDialogue("Exit = true")
end

local function waitForQuestText()
	clickQuestButton()
	repeat task.wait(0.5)
	until questPath() and questPath().Text:match("%(.-/.-%)") or questPath().Text:find("Quest Completed")
end

local function isQuestComplete()
	local q = questPath()
	return q and q.Text and q.Text:find("Quest Completed")
end

local function killTarget(npcName)
	local npc = Workspace.Lives:FindFirstChild(npcName)
	if npc and npc:FindFirstChild("HumanoidRootPart") then
		local targetHRP = npc.HumanoidRootPart
		repeat
			Character:MoveTo(targetHRP.Position + Vector3.new(0, 3, 0))
			m1Attack(targetHRP.Position)
			useSkill(targetHRP.Position)
			task.wait(0.25)
		until not npc:FindFirstChild("Humanoid") or npc.Humanoid.Health <= 0
	end
end

-- === MAIN LOOP ===
while true do
	checkAndCraft()

	startQuest()
	waitForQuestText()

	local index = 1
	while not isQuestComplete() do
		local target = targetQueue[index]
		if target then
			killTarget(target.npc)
			index = index + 1
			if index > #targetQueue then index = 1 end
		end
		task.wait(0.5)
		clickQuestButton()
	end

	completeQuest()
end
